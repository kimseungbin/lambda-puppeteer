AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-puppeteer

  Sample SAM Template for lambda-puppeteer

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  Function:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        TestInvoke:
          Type: Api
          Properties:
            Path: /
            Method: get
        Board1:
          Type: ScheduleV2
          Description: The schedule event for the first board.
          Properties:
            ScheduleExpression: "cron(30 0,8,12,16,20,22 ? * * *)"
            ScheduleExpressionTimezone: Asia/Seoul
            State: ENABLED
            Input: |
              {
                "boardIndex": 0
              }
        Board2:
          Type: ScheduleV2
          Description: The schedule event for the second board.
          Properties:
            ScheduleExpression: 'cron(0 0,8,12,16,20,22 ? * * *)'
            ScheduleExpressionTimezone: Asia/Seoul
            State: ENABLED
            Input: |
              {
                "boardIndex": 1
              }
      Timeout: 900
      MemorySize: 512
    Metadata:
      DockerTag: city
      DockerContext: ./private
      Dockerfile: Dockerfile
  MemberTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MemberTable
      KeySchema:
        - AttributeName: MemberID
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: MemberID
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  AttendanceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: AttendanceTable
      KeySchema:
        - AttributeName: WeekID
          KeyType: HASH
        - AttributeName: MemberID
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: WeekID
          AttributeType: S
        - AttributeName: MemberID
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  AddMemberFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dynamodb-crud/.
      Handler: app.createMember
      Runtime: nodejs18.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::Select:
                - 1
                - Fn::Split:
                    - '/'
                    - !GetAtt [ MemberTable, Arn ]
      Events:
        MyApi:
          Type: Api
          Properties:
            Path: /members
            Method: post
  GetMembersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dynamodb-crud/.
      Handler: app.getMembers
      Runtime: nodejs18.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::Select:
                - 1
                - Fn::Split:
                    - '/'
                    - !GetAtt [ MemberTable, Arn ]
      Events:
        MyApi:
          Type: Api
          Properties:
            Path: /members
            Method: get
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  FunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for the function. Test use only"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  Function:
    Description: "Lambda Function ARN"
    Value: !GetAtt Function.Arn
  FunctionIamRole:
    Description: "Implicit IAM Role created for the function"
    Value: !GetAtt FunctionRole.Arn
